---
import AstroLogomark from "~/icons/AstroLogomark.jsx"
import houstonHappy from "../_assets/houston-happy.webp"
import houston from "../_assets/houston.webp"
---

<section
	class="relative mx-auto flex w-full max-w-screen-xl flex-col items-center justify-end overflow-hidden px-4 pb-0"
>
	<AstroLogomark class="block h-20" />
	<div class="my-6 md:my-8">
		<h2 class="heading-3 max-w-2xl text-center lg:heading-2">Start building with Astro today</h2>
	</div>
	<a data-get-started href="https://docs.astro.build/" class="button-white">Get Started</a>
	<div data-houston-signal class="relative top-32 h-px w-full"></div>
	<div class="overflow-hidden">
		<img
			data-houston
			data-enter
			data-src={houston.src}
			data-src-hover={houstonHappy.src}
			src={houston.src}
			width={houston.width}
			height={houston.height}
			loading="lazy"
			decoding="async"
			alt=""
			class="max-w-[50vw] translate-y-full drop-shadow-lg transition-transform duration-500 data-[enter]:translate-y-1/4"
		/>
	</div>
</section>

<style>
	section::before {
		@apply absolute blur-xl z-noise-underlay rounded-3xl w-full lg:w-3/4 max-w-screen-xl left-1/2 -translate-x-1/2 h-full lg:h-3/4 bottom-0 translate-y-1/2;
		content: "";
		background: radial-gradient(
			rgba(100, 177, 203, 0.7),
			rgba(100, 177, 203, 0.5) 40%,
			transparent 80%
		);
	}
</style>

<script>
	import { getElement } from "~/helpers/dom.js"
	import { raise } from "~/helpers/errors.js"

	const houston = getElement("[data-houston]", HTMLImageElement)
	const getStartedButton = getElement("[data-get-started]", HTMLAnchorElement)
	const scrollSignal = getElement("[data-houston-signal]", HTMLDivElement)

	getStartedButton.addEventListener("mouseenter", () => {
		houston.src = houston.dataset.srcHover ?? raise("hover image missing")
	})
	getStartedButton.addEventListener("mouseleave", () => {
		houston.src = houston.dataset.src ?? raise("default image missing")
	})

	// start out hidden
	delete houston.dataset.enter

	const observer = new IntersectionObserver(([entry]) => {
		if (entry.isIntersecting) {
			houston.dataset.enter = ""
		} else {
			delete houston.dataset.enter
		}
	})
	observer.observe(scrollSignal)
</script>
